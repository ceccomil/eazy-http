// <auto-generated last-generation="04/09/2022 10:51:08" />
/*
Search for `ConfigureEazyHttpClients`: is successful!


Found: new ServiceCollection()
            .ConfigureEazyHttpClients(opts =>
            {
                opts
                    .EazyHttpClients
                    .Add(new("WeatherHttp", "https://localhost:7004/"));

                opts
                    .EazyHttpClients
                    .Add(new("WeatherHttp1", "https://localhost:7004/"));

                opts
                    .PersistentHeaders
                    .Add(
                        "WeatherHttp",
                        new RequestHeader[]
                        {
                            new("X-Persit1", "Persist 1 value"),
                            new("X-Persit2", "Persist 2 value"),
                        });

            })
            .AddEazyHttpClients()

Found client config: opts =>
            {
                opts
                    .EazyHttpClients
                    .Add(new("WeatherHttp", "https://localhost:7004/"));

                opts
                    .EazyHttpClients
                    .Add(new("WeatherHttp1", "https://localhost:7004/"));

                opts
                    .PersistentHeaders
                    .Add(
                        "WeatherHttp",
                        new RequestHeader[]
                        {
                            new("X-Persit1", "Persist 1 value"),
                            new("X-Persit2", "Persist 2 value"),
                        });

            }

Lambda Body: {
                opts
                    .EazyHttpClients
                    .Add(new("WeatherHttp", "https://localhost:7004/"));

                opts
                    .EazyHttpClients
                    .Add(new("WeatherHttp1", "https://localhost:7004/"));

                opts
                    .PersistentHeaders
                    .Add(
                        "WeatherHttp",
                        new RequestHeader[]
                        {
                            new("X-Persit1", "Persist 1 value"),
                            new("X-Persit2", "Persist 2 value"),
                        });

            }
Nodes ExpressionStatementSyntax: opts
                    .EazyHttpClients
                    .Add(new("WeatherHttp", "https://localhost:7004/"));
Nodes ExpressionStatementSyntax: opts
                    .EazyHttpClients
                    .Add(new("WeatherHttp1", "https://localhost:7004/"));
Results: WeatherHttp (https://localhost:7004/)
Results: WeatherHttp1 (https://localhost:7004/)
ExpressionEx: 
Http clients to be created: 2
*/
namespace EazyHttp;

public static class Logs
{
    public static string[] Collection { get; } = new[]
    {
        @"Search for `ConfigureEazyHttpClients`: is successful!

",
        @"Found: new ServiceCollection()
            .ConfigureEazyHttpClients(opts =>
            {
                opts
                    .EazyHttpClients
                    .Add(new(""WeatherHttp"", ""https://localhost:7004/""));

                opts
                    .EazyHttpClients
                    .Add(new(""WeatherHttp1"", ""https://localhost:7004/""));

                opts
                    .PersistentHeaders
                    .Add(
                        ""WeatherHttp"",
                        new RequestHeader[]
                        {
                            new(""X-Persit1"", ""Persist 1 value""),
                            new(""X-Persit2"", ""Persist 2 value""),
                        });

            })
            .AddEazyHttpClients()
",
        @"Found client config: opts =>
            {
                opts
                    .EazyHttpClients
                    .Add(new(""WeatherHttp"", ""https://localhost:7004/""));

                opts
                    .EazyHttpClients
                    .Add(new(""WeatherHttp1"", ""https://localhost:7004/""));

                opts
                    .PersistentHeaders
                    .Add(
                        ""WeatherHttp"",
                        new RequestHeader[]
                        {
                            new(""X-Persit1"", ""Persist 1 value""),
                            new(""X-Persit2"", ""Persist 2 value""),
                        });

            }
",
        @"Lambda Body: {
                opts
                    .EazyHttpClients
                    .Add(new(""WeatherHttp"", ""https://localhost:7004/""));

                opts
                    .EazyHttpClients
                    .Add(new(""WeatherHttp1"", ""https://localhost:7004/""));

                opts
                    .PersistentHeaders
                    .Add(
                        ""WeatherHttp"",
                        new RequestHeader[]
                        {
                            new(""X-Persit1"", ""Persist 1 value""),
                            new(""X-Persit2"", ""Persist 2 value""),
                        });

            }",
        @"Nodes ExpressionStatementSyntax: opts
                    .EazyHttpClients
                    .Add(new(""WeatherHttp"", ""https://localhost:7004/""));",
        @"Nodes ExpressionStatementSyntax: opts
                    .EazyHttpClients
                    .Add(new(""WeatherHttp1"", ""https://localhost:7004/""));",
        @"Results: WeatherHttp (https://localhost:7004/)",
        @"Results: WeatherHttp1 (https://localhost:7004/)",
        @"ExpressionEx: ",
        @"Http clients to be created: 2"
    };
}